#+STARTUP: inlineimages
* Intro
  #+BEGIN_SRC plantuml :file img/diagrama-x-system.png :exports results
    @startuml
    !theme blueprint

    '--------------------------- Componentes --------------------------
    component "X-Clients"{
    component "Emacs" as emacs <<X Application>>
    component "xterm" as terminal <<X Application>>

    component "KDE, GNOME, Xfce" <<DE, Desktop Environment>> as desktop
    component "Compiz, Mutter" as wm <<WM, Window Manager>>
    component "GDM, LightDM, KDM" as dm <<DM, Display Managers>>
    component "KDE Plasma, GNOME Shell" as shell <<Graphical Shell>>
    }

    component "Xlib" as clientlib <<Client Library>>
    component "GTK+" as gtkplus

    component "Display Server" as displayserver{
    component "X11, X.Org Server" as servidor <<X Server>> 

    note as N1
    ,* Reciben y atienden peticiones de los Cliente-X
    ,* Las peticiones son de visualización,
    entrada de texto y movimiento de mouse
    end note
    }

    component "Linux Kernel" as kernel <<OS Kernel>>
    component Hardware as hw

    '--------------------------- Relaciones --------------------------
    emacs -down- gtkplus
    terminal -down- gtkplus
    wm -down- gtkplus
    desktop -down- gtkplus
    dm -down- gtkplus
    gtkplus -down- clientlib
    clientlib <-down-> servidor : X Protocol
    shell -down- gtkplus

    kernel <-up-> servidor
    hw <-up-> kernel

    '--------------------------- Notas --------------------------

    note left of gtkplus
    ,* La capa **GDK**, implementa wrappers
    para interactuar con **Xlib** (//portabilidad//)
    ,* La capa **GTK** ofrece toolkit+widgets 
    para crear aplicaciones con interfaz gráfica
    (//depende de GDK//)
    end note

    note left of clientlib
    ,* Es una API a bajo nivel
    ,* Las aplicaciones la requieren
    para interactuar con el Servidor-X
    end note

    note bottom of shell
    ,* Por defecto los (DE) ya incluyen una **shell**
    ,* Se puede instalar una **shell** y luego elegir 
    otro **Entorno de Escritorio**
    end note

    @enduml
  #+END_SRC

  [[file:img/linux-arquitectura.png]]
* Display Servers
  - Reciben y atienden peticiones de los clientes
  - Recibe y atiende peticiones de visualización, entrada de texto y movimiento de mouse
  - Ofrecen servicios a los periféricos de entrada (teclado/mouse) y de salida (pantalla)

  #+BEGIN_QUOTE
  Algunos ejemplos serían

  1) X.Org Server
  2) Cygwin/X (para windows)
  #+END_QUOTE
* Client Libraries
  - Usadas para consumir los servicios de los servidores y mostrarlos por pantalla
  - Utilizadas para realizar peticiones al Servidor X

  #+BEGIN_QUOTE
  Algunos ejemplos serían

  1) Xlib
  2) X Toolkit
  #+END_QUOTE
* (DM) Display Managers + Session Managers
  - Son Clientes que usan las *Client libraries*
  - Administran la visualización/selección/movimiento/cambio de tamaño y decoración de las ventanas

  #+BEGIN_QUOTE
  Algunos ejemplos serían

  1) GDM
  2) KDM
  3) LightDM
  4) LXDM
  #+END_QUOTE
* (DE) Desktop Environment - Entorno de Escritorio
   #+BEGIN_QUOTE
   Los más populares en Linux son

   1) KDE
      - su nombre surje de otro Entorno de Escritorio llamado CDE, Common Desktop Environment
      - en KDE 4 se integra la tecnología Plasma, que integra los Workspaces
   2) GNOME Shell
   3) Xfce
      - basado en la biblioteca *GTK+ 2*
   4) LXDE (Lightweight X11 Desktop Environment)
   5) Cinnamon
      - basado en GNOME Shell 2
      - desarrollado por Linux Mint
      - usa el Gestor de Ventanas *Mutter* como *Compositor*
   6) MATE
      - basado en GNOME Shell 2

   Los Entornos de Escritorio *Cinnamon* y *MATE* nacieron porque GNOME Shell 3 no satisfacía las necesidades de los usuarios de linux,
   son una bifurcación del proyecto original de GNOME Shell 2
   #+END_QUOTE
* (WM) X Window Managers - Gestores de Ventanas
** Compositor - Gestores de Composición de Ventanas
   - Es un componente de la (GUI) interfáz gráfica
   - Dibuja las ventanas ó bien sólo sus bordes
   - Procesa la salida en un buffer para manipularla previo a mostrarla en la salida de la pantalla
   - Características visuales que ofrecen
     1) transparencia
     2) degradado (Fading)
     3) girado (contorting)
     4) escalamiento
     5) mezclado (shuffling)
     6) fusionado (bending)

  #+BEGIN_QUOTE
  Los más conocidos son

  1) Compiz
  2) KWin (por default en KDE Plasma 5)
  3) Mutter (por default en GNOME 3)
  4) Xfwm (por default en Xfce)
  #+END_QUOTE
** Tiling Window Managers
   - Permiten dividir varios paneles en una pantalla (que se pueden redimensionar/ajustar el tamaño)
   - Aprovecha todo el espacio de la pantalla, evitar espacios vacíos que pueden ser aprovechados para mostrar información de las aplicaciones
   - Muchas las aplicaciones implementan este concepto para dividir la ventana en paneles (Ej. Emacs, Vscode, ...)

   #+BEGIN_QUOTE
   Los más conocidos son

   1) i3
   2) xmonad (desarrollado en Haskell)
   #+END_QUOTE
** Stacking Window Managers
   - Permite solapar ventanas de aplicaciones entre si
   - Se suele sugerir más un *Tiling WM* ya que éste segundo aprovecha todo el espacio de la pantalla entre las ventanas de las aplicaciones

   #+BEGIN_QUOTE
   Los más conocidos son

   1) Openbox
   3) awesome
   4) Fluxbox
   2) JWM
   #+END_QUOTE
* TODO Shell
   - Es una interfaz que expone servicios del Sistema Operativo
* TODO Graphical Shells
   - Es una (GUI) *Graphical User Interface* para manipular programas con gráficos y ofrece operaciones para abrir/cerrar/mover/redimensionar ventanas
   - Pueden estar incluidas en un (DE) *Entorno de Escritorio*
   - Luego de instalar se puede agregar ó no un (DE) *Entorno de Escritorio* (/por tanto podemos ir cambiar el Entorno de Escritorio/)

   #+BEGIN_COMMENT
   - Es un (WM) *X Window Manager* con un conjunto de programas que tienen la funcionalidad de instalar aplicaciones, gestionar ventanas y otras
   - Se instala encima de un *Window System* (Ej. x11, X Window System) 
   #+END_COMMENT

   #+BEGIN_QUOTE
   Las más populares en Linux son

   - Unity (para GNOME Desktop, desarrollado por Canonical Ltd para Ubuntu 10)
   - GNOME Shell
   - KDE Plasma
   - Maynard
   #+END_QUOTE

   #+BEGIN_QUOTE
   Unity NO es una colección de aplicaciones, como si lo son GNOME, KDE, Xfce, etc.. 
   #+END_QUOTE
** TODO Wayland
* X11 - X Window System
** Conceptos
   - Es un *protocolo de sistema de ventanas*
   - Administra los periféricos de entrada (mouse/teclado) y salida (la pantalla)
   - Usa el modelo de *Cliente-Servidor* (modelo de comunicación)
   - Permite visualizar ventanas y otros componentes gráficos de la interfaz 
     - Localmente (software cliente y servidor en la misma maquina)
     - Remotamente (a través de la red, el software gráfico se ejecuta en una máquina remota y se visualiza en un escritorio)
** Servidor X
   - Conocido como *X.Org Server*
   - Se considera servidor porque *proporciona servicios* de entrada/salida a una aplicación es decir un *Cliente X*
   - Recibe y atiende peticiones de visualización, entrada de texto y movimiento de mouse
   - A través de un *puerto* recibe las peticiones (puntos de acceso a una dirección IP)
   - Se ejecuta en un terminal *Cliente ligero* con pantalla+teclado+mouse
** Cliente X
   - Se considera cliente porque *consume los servicios* de entrada/salida del *Servidor X*
   - Se conecta a un *Servidor X* y le envía peticiones de visualización usando el *protocolo X* a través de la biblioteca *Xlib*
   - Aplica el *protocolo X* para delegar las tareas de interacción hombre-máquina (HMI) al *Servidor X*
   - Aplicación de Software (juego, procesador de texto, calculadora, ..)
   - Puede ser una computadora local/remota
** Xlib
   - Biblioteca que usan los Clientes (GTK+, Qt, ...) para comunicarse con el *X.Org Server*
** Diagramas
*** Esquema de capas GUI
** Referencias
*** Referencias Oficiales
    1. [[https://es.frwiki.wiki/wiki/X_Window_System][X window system (frwiki.wiki)]]
* IPC - Inter Process Communication
** Conceptos
   - (IPC) hace referencia a los mecanismos que existen para *Comunicación entre Procesos* ("inter" significa "entre")
   - Necesario para que un proceso *X.Org Server* y cualquier proceso *x-client* se puedan comunicar
     (porque entre procesos no se conocen, a menos que se implemente un mecanismo IPC)
** Sockets
   - Es el mecanismo (IPC) más utilizado 
   - Provee una (API) *Application Programming Interface* para la comunicación con (TCP/IP) *Transmission Control Protocol/Internet Protocol*
** Referencias
*** Referencias Oficiales
    1. [[https://www.ibm.com/docs/es/aix/7.2?topic=protocol-tcpip-name-resolution][Resolución de nombres TCP/IP (ibm.com)]]
* Referencias
** Referencias Oficiales
   1. [[https://www.wikiwand.com/en/GTK][GTK (wikiwand.com)]]
   2. [[https://docs.oracle.com/cd/E19683-01/816-0279/serverintro-91783/index.html][Introduction to the Solaris X Server (docs.oracle.com)]]
   3. [[https://en.wikipedia.org/wiki/Comparison_of_X_window_managers][Comparison of X window managers (wikipedia.org)]]
   4. [[http://openbox.org/wiki/Main_Page][Openbox (openbox.org)]]
** Referencias Extraoficiales
   1. [[https://blog.actorsfit.com/a?ID=01750-9e8ca4c7-6f5d-495a-bac8-8abe4e6389b6][The relationship between X-based GNOME, GTK, GDK, Xlib, Glib (blog.actorsfit.com)]]
   2. [[https://l3net.wordpress.com/2013/03/17/a-memory-comparison-of-light-linux-desktops/][A memory comparison of light Linux desktops (l3net.wordpress.com)]]
   3. [[https://www.emezeta.com/articulos/openbox-personalizar-escritorio-linux][Openbox personalizar escritorio linx (emezeta.com)]]
   4. [[https://www.deviantart.com/search?q=openbox][Openbox devianart (devianart.com)]]
** Comunidad Linux
   1. [[http://www.espaciolinux.com/foros/entorno-grafico-f39/][EspacioLinux.com]]
** Pendientes a Revisar
   1. [[https://www.gtk.org/docs/getting-started/hello-world][GTK Getting Started (gtk.org)]]
   2. [[https://blog.gtk.org/page/4/][GTK Dev Blog (blog.gtk.org)]]
   3. [[https://speakerdeck.com/wuman/gtk-plus-programming-using-vala?slide=15][GTK+ Programming using Vala (speakerdeck.com)]]
   3. [[https://conpilar.kryptonsolid.com/como-usar-xdmcp-para-el-acceso-a-escritorio-remoto-en-linux/][Como usar XDMCP para acceso remoto (conpilar.kryptonsolid.com)]]
   4. [[https://blog.sombex.com/2018/01/install-multiple-display-manager-and-switch-display-manager-debian.html][Install Multiple Display Manager and switch between display manager on debian (blog.sombex.com)]]
